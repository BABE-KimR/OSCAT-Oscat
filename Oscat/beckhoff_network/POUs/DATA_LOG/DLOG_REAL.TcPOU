<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="DLOG_REAL" Id="{a937008e-4414-415b-b917-4edb42cf520e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK DLOG_REAL
VAR_IN_OUT
	X : DLOG_DATA;
END_VAR
VAR_INPUT
	VALUE : REAL;
	N : INT;
	D : STRING(1) := ',';
	COLUMN : STRING(40);
	DELTA : REAL;
END_VAR
VAR
	UCB : UNI_CIRCULAR_BUFFER;
	init : BOOL;
	id : WORD;
	delta_last : REAL;
	value_last : REAL;
END_VAR

(*
version 1.2		25. july. 2011
programmer		ks
tested by			ks

DLOG_REAL legt den REAL-Wert als STRING im FIFO-RING-Buffer ab um diesen mit den Baustein DLOG_STORE_*  aufzuzeichnen
*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT init THEN
	init := TRUE;
	X.ID_MAX := X.ID_MAX + 1;
	id := WORD#16#0201; (* Quelltype REAL , Zieltype STRING *)
END_IF;

IF X.ADD_HEADER THEN
	X.UCB.D_STRING := COLUMN;
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
ELSIF X.ADD_DATA THEN
	X.UCB.D_STRING := REAL_TO_STRF(IN:=value_last,N:=N,D:=D);
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	delta_last := value_last;
ELSIF DELTA <> 0.0 THEN
	IF VALUE <= (delta_last - DELTA) OR VALUE >= (delta_last + DELTA) THEN
		X.ADD_DATA_REQ := TRUE;
		delta_last := VALUE;
	END_IF;
END_IF;
value_last := VALUE;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	17. may. 2011	rev 1.1
	DELTA Funktion integriert

ks	25. july.   2011	rev 1.2
	neue head information
*)]]></ST>
    </Implementation>
    <LineIds Name="DLOG_REAL">
      <LineId Id="27" Count="34" />
    </LineIds>
  </POU>
</TcPlcObject>