<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="STRING_TO_URL" Id="{518b3da6-56d5-4322-b37f-47bb7c10da4a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION STRING_TO_URL : URL
VAR_INPUT
	STR : T_MaxString;
	DEFAULT_PROTOCOL : STRING(10);
	DEFAULT_PATH : STRING(80);
END_VAR
VAR
	pos: INT;
	pos2: INT;
	x : T_MaxString;
END_VAR

(*
version 1.1	20. dec. 2010
programmer 	hugo
tested by		oscat

URL splits a unifrom resource locator in its conponents.

*)]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*

http://hans:geheim@www.example.org:80/demo/example.cgi?land=de&stadt=aa#abschnitt1
|       |      |         |         |   |                   |               |
|       |      |         Host      |   Pfad                Query           Anker
|       |      Passwort            Port
|       Benutzer
Protokoll

*)

(* check if string is empty and return empty url *)
IF STR = '' THEN RETURN; END_IF;

(* extract the protocol *)
(* first we check if the optional protocol is specified ending with a :// *)
pos := FIND(STR, '://');
IF pos > 0 THEN
	(* store protocol and restore the rest of url in temp *)
	STRING_TO_URL.PROTOCOL := LEFT(STR, pos - 1);
	x := RIGHT(STR, LEN(STR) - pos - 2);
ELSE
	x := STR;
	STRING_TO_URL.PROTOCOL := DEFAULT_PROTOCOL;
END_IF;

(* extract user and password if present ending with a @ *)
pos := FIND(x, '@');
IF pos > 0 THEN
	(* extract user *)
	pos2 := FIND(x,':')+1;
	IF pos2 > 1 AND pos2 <= pos THEN
		STRING_TO_URL.USER := LEFT(x,pos2 - 2);
		STRING_TO_URL.PASSWORD := MID(x, pos - pos2, pos2);
	ELSE
		STRING_TO_URL.USER := LEFT(x, pos - 2);
		STRING_TO_URL.PASSWORD := '';
	END_IF;
	x := RIGHT(x, LEN(x) - pos);
ELSE
	STRING_TO_URL.USER := '';
	STRING_TO_URL.PASSWORD := '';
END_IF;

(* extract anchor *)
pos := FIND(x, '#');
IF pos > 0 THEN
	STRING_TO_URL.ANCHOR := RIGHT(x, LEN(x) - pos);
	x := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.ANCHOR := '';
END_IF;

(* extract query  *)
pos := FIND(x, '?');
IF pos > 0 THEN
	STRING_TO_URL.QUERY := RIGHT(x, LEN(x) - pos);
	x := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.QUERY := '';
END_IF;

(* extract path  *)
pos := FIND(x, '/');
IF pos > 0 THEN
	STRING_TO_URL.PATH := RIGHT(x, LEN(x) - pos + 1);
	x := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.PATH := DEFAULT_PATH;
END_IF;

(* extract port and leave domain *)
pos := FIND(x, ':');
IF pos > 0 THEN
	STRING_TO_URL.PORT := STRING_TO_WORD(RIGHT(x, LEN(x) - pos));
	STRING_TO_URL.DOMAIN := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.PORT := 0;
	STRING_TO_URL.DOMAIN := x;
END_IF;

(* revision history
hm		18. apr 2008	rev 1.0
	original version

ks		20. dec. 2010	rev 1.1
	stringlength 250 , var x

*)]]></ST>
    </Implementation>
    <LineIds Name="STRING_TO_URL">
      <LineId Id="22" Count="88" />
    </LineIds>
  </POU>
</TcPlcObject>