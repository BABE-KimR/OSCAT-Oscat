<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="BASE64_ENCODE_STR" Id="{2093e82e-d900-4067-a977-eed5ebbd5867}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK BASE64_ENCODE_STR
VAR_INPUT
	RUN : BOOL;
END_VAR
VAR_OUTPUT
	DONE : BOOL;
END_VAR
VAR_IN_OUT
	STR1 : STRING(144);
	STR2 : STRING(192);
END_VAR
VAR
	BASE64_ENCODE_STREAM : BASE64_ENCODE_STREAM;
	run_last : BOOL;
	buf1 : ARRAY [0..47] OF BYTE;
	buf2 : ARRAY [0..63] OF BYTE;
	mode : INT;
	size1 : INT;
	size2 : INT;
	end : INT;
	pos : INT;
END_VAR

(*
version 1.0	06. dec. 2009
programmer 	ks
tested by	ks

BASE64_ENCODE_STR konvertiert einen normalen String in einen BASE64 kodierten String. 

*)

]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE mode OF
0:	IF RUN AND NOT run_last THEN
		DONE := FALSE;
		mode := 1;
		end := LEN(STR1);
		pos := 0;
		STR2 := '';
	END_IF;
1:
	size1 := MIN(48,end - pos);
	IF size1 > 0 THEN
		_STRING_TO_BUFFER(STR:=MID(STR1, size1, pos + 1), POS:=0, PT:=ADR(buf1), SIZE:=SIZEOF(buf1));
		BASE64_ENCODE_STREAM(BUF1:=buf1 ,BUF2:=buf2 ,SIZE1:=size1 ,SIZE2=>size2);
		STR2 := CONCAT(STR2,BUFFER_TO_STRING(PT:=ADR(buf2), SIZE:=SIZEOF(buf2), START:=0, STOP:=size2 - 1));
	ELSE
		mode := 0;
		DONE := TRUE;
	END_IF;
	pos := pos + size1;
END_CASE;

run_last := RUN;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)]]></ST>
    </Implementation>
    <LineIds Name="BASE64_ENCODE_STR">
      <LineId Id="33" Count="28" />
    </LineIds>
  </POU>
</TcPlcObject>