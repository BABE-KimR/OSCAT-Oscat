<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="RC4_CRYPT_STREAM" Id="{edfa13a5-444b-4244-a8a2-9d684c2242ad}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RC4_CRYPT_STREAM
VAR_IN_OUT
	MODE : INT;
	KEY : STRING(40);
	BUF : ARRAY [0..63] OF BYTE;
	SIZE : UDINT;
END_VAR

VAR_OUTPUT
	POS : UDINT;
END_VAR

VAR
	sbox : ARRAY [0..255] OF BYTE;
	skey : ARRAY [0..255] OF BYTE;
	a : INT;
	b : INT;
	c : INT;
	d : USINT;
	e : USINT;
	end : UDINT;
	v : BYTE;
END_VAR

(*
version 1.0	09. jan. 2010
programmer	ks
tested BY	ks

RC4_CRYPT_STREAM kann einen Datenstrom ver/entschlüsseln mittels der RC4 Stromchiffrierung
*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE MODE OF

1:	(* Initialisierung *)
	b := LEN(KEY) - 1;
	IF b < 0 OR SIZE < 1 THEN
		MODE := 3;
		RETURN;
	END_IF;

	FOR a := 0 TO b DO
		skey[a] := CODE(KEY, a + 1);
		sbox[a] := INT_TO_BYTE(a);
	END_FOR;

	c := 0;
	FOR a := b + 1 TO 255 DO
		skey[a] := skey[c];
		sbox[a] := INT_TO_BYTE(a);
		c := c + 1;
		IF c > b THEN c := 0; END_IF;
	END_FOR;

	d := 0;
	FOR a := 0 TO 255 DO
		d := d + sbox[a] + skey[a];
		v := sbox[a];
		sbox[a] := sbox[d];
		sbox[d] := v;
	END_FOR;

	POS := 0;
	end := SIZE;
	SIZE := MIN(64,end);
	d := 0;
	e := 0;
	MODE := 2;

2:	(* Daten ver/entschlüsseln *)

	b := UDINT_TO_INT(SIZE) - 1;
	FOR a := 0 TO b DO
		d := d + 1;
		e := e + sbox[d];
		v := sbox[d];
		sbox[d] := sbox[e];
		sbox[e] := v;
		v := sbox[d] + sbox[e];
		BUF[a] :=BUF[a] XOR sbox[v];
	END_FOR;

	POS := POS + SIZE;
	SIZE := MIN(64,end - POS);

	IF SIZE = 0 THEN
		MODE := 3;
	END_IF;
END_CASE;

(* revision history

ks	9. Jan. 2010 rev 1.0
	original version

*)]]></ST>
    </Implementation>
    <LineIds Name="RC4_CRYPT_STREAM">
      <LineId Id="32" Count="63" />
    </LineIds>
  </POU>
</TcPlcObject>