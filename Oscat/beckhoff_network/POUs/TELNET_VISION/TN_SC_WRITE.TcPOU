<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="TN_SC_WRITE" Id="{cb2e870b-f249-4529-be07-08f6178c4bb0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TN_SC_WRITE
VAR
	bo_Color : BOOL;
	in_Offset : INT;
	in_Char_Index : INT;
	in_T_MaxString : INT;
END_VAR
VAR_INPUT
	Iin_Y : INT;
	Iin_X : INT;
	Iby_ATTR : BYTE;
	Ist_STRING : STRING;
END_VAR
VAR_IN_OUT
	Xus_TN_SCREEN : us_TN_SCREEN;
END_VAR

(*
version 1.0		10. mai 2010
programmer		ks
tested by		ks

TN_SC_WRITE schreibt einem Text an die angegebene Koordinate
*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[in_T_MaxString := LEN(Ist_STRING);
IF TN_SC_XY_ERROR(Iin_X + in_T_MaxString - 1,Iin_Y) THEN RETURN; END_IF;
Xus_TN_SCREEN.bya_Line_Update[Iin_Y] := TRUE; (* Zeile zum Updaten freigeben *)
in_Offset := (Iin_Y * 80) + Iin_X; (* Offset des ersten Zeichen berechnen *)
bo_Color := Iby_ATTR <> BYTE#00;

(* Zeichen und Attribute des String kopieren *)
FOR in_Char_Index := 1 TO in_T_MaxString DO
	IF bo_Color THEN Xus_TN_SCREEN.bya_COLOR[in_Offset] := Iby_ATTR; END_IF;
	Xus_TN_SCREEN.bya_CHAR[in_Offset] := CODE(STR:=Ist_STRING,POS:=in_Char_Index);
	in_Offset := in_Offset + INT#1;
END_FOR;

Xus_TN_SCREEN.in_EOS_Offset := in_Offset; (* End of String Offset sichern *)

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)]]></ST>
    </Implementation>
    <LineIds Name="TN_SC_WRITE">
      <LineId Id="25" Count="18" />
    </LineIds>
  </POU>
</TcPlcObject>