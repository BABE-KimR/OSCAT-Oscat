<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="READ_HTTP" Id="{9171c627-e092-4c0e-9b8a-b8e6e0f32a79}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK READ_HTTP
VAR_INPUT
	SIZE : UINT;
	POS : INT;
	SRC : STRING;
END_VAR
VAR_IN_OUT
	PT : NW_BUF_LONG;
END_VAR
VAR_OUTPUT
	READ_HTTP : T_MaxString;
END_VAR
VAR
	index : INT;
	s1 : INT;
	e1 : INT;
	stop : INT;
END_VAR

(*

version 1.1 20. oct. 2009
programmer 	ks
tested by	ks

READ_HTTP wertet die Informationen einer HTTP-Request aus, und stellt die Daten zu Verfügung.
*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[stop := UINT_TO_INT(SIZE) - 1;

IF LEN(SRC) = 0 THEN
	(* wenn kein Suchbegriff vorhanden ist, dann den HTTP-STATUS auswerten *)
	SRC := 'HTTP/'; (* neuer Suchbegriff *)
ELSE
	(* gesuchten Parametertext ergänzen *)
	SRC := CONCAT(SRC,': ');
END_IF;

s1 := BUFFER_SEARCH(pt:=ADR(PT),SIZE:=SIZE,STR:=SRC,POS:=POS,IGN:=TRUE);

IF s1 >= 0 THEN (* Text found *)
	e1 := s1;

	(* search start of line *)
	index := s1 - 1;
	WHILE (index > 0) DO
		IF pt[index] < BYTE#32 THEN EXIT; END_IF;
		s1 := s1 - 1;
		index := index - 1;
	END_WHILE;

	(* search end of line *)
	index := e1 + 1;
	WHILE (index <= stop) DO
		IF pt[index] < BYTE#32 THEN EXIT; END_IF;
		e1 := e1 + 1;
		index := index + 1;
	END_WHILE;

	s1 := s1 + LEN(SRC); (* 'suchbegriff: ' nicht mitkopieren *)

	(* copy string *)
	READ_HTTP := BUFFER_TO_STRING(PT:=ADR(PT),SIZE:=SIZE,START:=s1,STOP:=e1);
ELSE
	READ_HTTP := '';
END_IF;

(* revision history

ks	18. oct. 2008	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0

*)]]></ST>
    </Implementation>
    <LineIds Name="READ_HTTP">
      <LineId Id="28" Count="47" />
    </LineIds>
  </POU>
</TcPlcObject>