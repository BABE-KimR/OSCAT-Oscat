<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="BLIND_SET" Id="{3c47a8e4-da05-4d1a-93d6-49188b6e5c43}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK BLIND_SET
VAR_INPUT
	UP, DN : BOOL;
	S_IN : BYTE;
	PI, AI : BYTE;
	IN : BOOL;
	PX, AX : BYTE;
END_VAR
VAR_INPUT CONSTANT
	OVERRIDE_MANUAL : BOOL;
	RESTORE_POSITION : BOOL;
	RESTORE_TIME : TIME := T#60s;
END_VAR
VAR_OUTPUT
	QU, QD : BOOL;
	STATUS : BYTE;
	PO, AO : BYTE;
END_VAR
VAR
	tx: TIME;
	ps: BYTE;
	as: BYTE;
	last: TIME;
END_VAR

(*
version 1.0	27. jul 2009
programmer 	hugo
tested by		oscat

BLIND_SET can be used to force a definite position and angle.
blind_set can be placed close to blind_control for high priority while blind_input must be always at the beginning of the chain with low priority.

*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* read system time *)
tx := DWORD_TO_TIME(T_PLC_MS());

(* check inputs *)
IF IN THEN
	IF override_manual OR (UP AND DN) THEN
		status := 178;
	END_IF;
END_IF;

(* state machine *)
CASE STATUS OF
	0: (* power on state *)
		status := S_IN;

	178: (* force values from PX and AX *)
		PO := PX;
		AO := AX;
		QU := TRUE;
		QD := TRUE;
		(* check for end of forced position *)
		IF NOT in THEN
			STATUS := SEL(RESTORE_POSITION, S_IN, 179);
			last := tx;
		END_IF;

	179: (* restore previous position *)
		PO := ps;
		AO := as;
		IF ((PO = PI) AND (AO = AI))  OR tx - last >= RESTORE_TIME THEN
			status := S_IN;
		END_IF;

ELSE
	(* no operation transfer inputs to outputs *)
	PO := PI;
	ps := PI;
	AO := AI;
	as := AI;
	STATUS := S_IN;
	QU := UP;
	QD := DN;
END_CASE;


(* revision history
hm	27. jul 2009	rev 1.0
	original release

*)]]></ST>
    </Implementation>
    <LineIds Name="BLIND_SET">
      <LineId Id="35" Count="49" />
    </LineIds>
  </POU>
</TcPlcObject>