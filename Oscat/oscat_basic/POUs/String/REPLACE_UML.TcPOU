<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="REPLACE_UML" Id="{14a5d0f0-6800-46c4-bca7-ead5fe4ca977}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION REPLACE_UML : T_MaxString
VAR_INPUT
	str : T_MaxString;
END_VAR
VAR
	L : INT;
	pt : POINTER TO BYTE;
	pto : POINTER TO BYTE;
	ptm : POINTER TO BYTE;
	pt1, pt2 : POINTER TO BYTE;
	su : STRING(2);
	pos : INT;
END_VAR

(*
version 1.1	29. mar. 2008
programmer 		kurt
tested by		hugo

REPLACE_UML replaces all occurences of Ä,Ö,Ü and ä,ö,ü,ß with Ae, ae, Oe, oe, Ue, ue and ss.

*)]]></Declaration>
    <Implementation>
      <ST><![CDATA[PT := ADR(str);
pto := ADR(REPLACE_UML);
ptm := pto + TO_DWORD(MAX_STRING_LENGTH);
pt1 := ADR(su);
pt2 := pt1 + 1;
L := LEN(str);
WHILE pos < L AND pos < TO_DINT(MAX_STRING_LENGTH) DO
	IF pt^ < 127 THEN
		(* no uml character simlply copy the character*)
		pto^ := pt^;
	ELSE
		(* convert the uml character *)
		su := TO_UML(pt^);
		(* we must make sure pointer are not out of range *)
		pto^ := pt1^;
		IF pto < ptm AND pt2^ > 0 THEN
			pto := pto + 1;
			pto^ := pt2^;
		END_IF;
	END_IF;
	(* increment pointers *)
	pt := pt + 1;
	pto := pto + 1;
	pos := pos + 1;
END_WHILE;

(* properly close the output string *)
pto^ := 0;


(* revision history
hm	29. feb 2008	rev 1.0
	original version

hm	29. mar. 2008	rev 1.1
	changed STRING to T_MaxString
	new code to avoid pointer out of range
	use new function to_uml
*)]]></ST>
    </Implementation>
    <LineIds Name="REPLACE_UML">
      <LineId Id="22" Count="38" />
    </LineIds>
  </POU>
</TcPlcObject>